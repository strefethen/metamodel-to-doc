extends core

mixin operationHeader(name, operation, internal)
    h4
        - var n = name
        a(href=`${n}/index.html`)
            | #{name}
        if internal
           | &nbsp;
           span(class="label label-warning" style="font-size: 8pt") Internal

    dl
        dt
            - var re = /#([a-z]*) ([a-z]*)/g;
            - var docs = operation.value.documentation.replace(/{@[a-z]* ([\.,#,A-Za-z]*)}/g, '$1').replace(re, `<a href="${name}/$1">$1</a>`);
            dd !{docs}

    p(class="eyebrow") #{type}

mixin heading(type, name, namespace, documentation, internal)
    p(class="eyebrow") #{type}
    h2(id='operation') #{name}
        if internal
            | &nbsp;
            span(class="label label-warning" style="font-size: 10pt") Internal

    if namespace
        p(class="namespace") #{namespace}
    - var re = /#([a-z]*) ([a-z]*)/g;
    - var docs = documentation.replace(/{@[a-z]* ([\.,_,#,A-Za-z]*)}/g, '$1').replace(re, `<a href="${name}/$1">$1</a>`);

    p(class="topic-abstract") !{docs} 

mixin operationParameters(parameters)
    if parameters
        h3 Parameters
        dl
            each param in parameters
                dt
                    code
                        span #{param.name}
                dd
                    div
                        div
                            - var docs = param.documentation
                            p !{docs}

mixin typeInfo(item)
    - let value = item.type
    - let optional = false
    - let type = ""
    // Dig through the type information and pull relevant content
    if item.type.builtin_type
        - type = item.type.builtin_type
    if item.type.user_defined_type
        - value = item.type.user_defined_type
    else if item.type.generic_instantiation
        - optional = item.type.generic_instantiation.generic_type == "OPTIONAL"
        if item.type.generic_instantiation.hasOwnProperty("map_value_type") && item.type.generic_instantiation.map_value_type.hasOwnProperty("user_defined_type")
            - value = item.type.generic_instantiation.map_value_type.user_defined_type
        else if item.type.generic_instantiation.hasOwnProperty("element_type") 
            if item.type.generic_instantiation.element_type.hasOwnProperty("user_defined_type")
                - value = item.type.generic_instantiation.element_type.user_defined_type
            else if item.type.generic_instantiation.element_type.hasOwnProperty("builtin_type")
                - type = item.type.generic_instantiation.generic_type + " of " + item.type.generic_instantiation.element_type.builtin_type
    span(id=`${item.name}`) #{item.name}
    case value.resource_type
        when "com.vmware.vapi.structure"
            if optional
                span &nbsp;(optional)
            span :
            a(href=`/${root}/structures/${value.resource_id}.html`)  #{value.resource_id}
        when "com.vmware.vapi.enumeration"
            if optional
                span &nbsp;(optional)
            span :
            a(href=`/${root}/enumerations/${value.resource_id}.html`)  #{value.resource_id}
        default
            | : #{type}

mixin descriptionList(list, name, regex)
    if list && list.length > 0
        h3 #{name}
        dl
            each item in list
                dt
                    code
                        +typeInfo(item)
                dd
                    div
                        div
                            - var docs = item.documentation.replace(regex, '$1')
                            p !{docs}

mixin enumerations(enumerations)
    each e in enumerations 
        div(class='item')
            a(href=`/${root}/enumerations/${e.value.name}.html`) #{e.value.name}

mixin sidebaritems(name, items, currentitem, rootbase)
    if items && Object.keys(items).length > 1
        h5 #{name}
        ul
            each item in items
                if item.key !== currentitem.key
                    - var re = /\./g
                    - var path = item.key.replace(re, '/')
                    li
                        if rootbase
                            a(href=`/${root}/${path}`) #{item.key}
                        else
                            a(href=`../${path}`) #{item.key}

mixin sidebaritemsarray(name, items, currentitem, rootbase)
    if items.length > 1
        h5 #{name}
        ul(class="list")
            each item in items
                if item !== currentitem
                    - var re = /\./g
                    - var path = item.key.replace(re, '/')
                    li
                        if rootbase
                            a(href=`/${path}`) #{item.key}
                        else
                            a(href=`../${path}`) #{item.key}

mixin sidebarversions(versions)
    if versions
        h5 Supported Versions 
            ul(class="list")
                if versions.type === "STRING"
                    li #{versions.string_value}
                else                    
                    each version in versions.list_value
                        li #{version}

block projectname
    | vSphere REST API
