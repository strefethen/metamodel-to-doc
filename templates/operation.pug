extends codetemplatebase

block title
    title #{operation.key} - #{namespace}

block maincontent
        
    +heading("Operation", operation, namespace, documentation) 

    if listWarning
        div(class="alert alert-warning" role="alert") #{listWarning}

    hr

    H3 Request
    - var s = JSON.stringify(method)
    //-
        div(id="exTab1" class="container")
            ul(class="nav nav-pills")
                li(class="active")
                    a(href="#request" data-toggle="tab") Request
                li
                    a(href="#python" data-toggle="tab") Python
                li
                    a(href="#java" data-toggle="tab") Java
                li
                    a(href="#csharp" data-toggle="tab") C#
                li
                    a(href="#ruby" data-toggle="tab") Ruby
                li
                    a(href="#javasscript" data-toggle="tab") JavaScript
    //
    if requestWarning
        div(class="alert alert-warning" role="alert") #{requestWarning}
    else
        div(class="tab-content clearfix col-md-9")
            div(class="tab-pane active" id="request")
                figure(class="code-listing") 
                    strong #{method.method}
                    |  #{method.path}

                //-
                    div(class="tab-pane" id="python" ext="py")
                        pre
                            code(class="language-python")
                    div(class="tab-pane" id="java" ext="java")
                        pre
                            code(class="language-java")
                    div(class="tab-pane" id="csharp" ext="cs")
                        pre
                            code(class="language-csharp")
                    div(class="tab-pane" id="ruby" ext="rb")
                        pre
                            code(class="language-ruby")
                    div(class="tab-pane" id="javascript" ext="js")
                        pre
                            code(class="language-javascript")
                //
        div(class="clearfix")

    +descriptionList(params, "Parameters", regex)

    if Object.keys(output).length > 0 && output.type.hasOwnProperty('builtin_type') && output.type.builtin_type == "VOID"
        h3 Response
        p None
    else
        h3 Response
        - var docs = output.documentation.replace(/{@[a-z]* ([\.,#,A-Za-z]*)}/g, '$1');
        p !{docs}
        - var t = JSON.stringify(output)
            //h4 Return Type
            if warning
                div(class="alert alert-warning" role="alert") #{warning}
            +typeInfo({ "name": "Return Type", "type": output.type })
            //p #{t}

    - var ex = examples
    p !{ex}

    if Object.keys(errors).length > 0
        h3 Errors
            - var x = JSON.stringify(errors)
        table(class="table table-striped")
            tr
                th Type
                th Description
            each error in errors
                tr
                    - var f = `/${root}/structures/${error.structure_id}.html`
                    - var id = error.structure_id.split('.')
                    - id = id[id.length - 1]
                    td 
                        a(href=`${f}`) #{error.structure_id}
                    - var docs = error.documentation
                    td !{docs}

    a(href='../index.html') Back

block sidebar
    p
    p(class="eyebrow") See Also
    h5 Service
    ul
        li
            a(href="../") #{service}    
    +sidebaritems("Related Operations", operations, operation, false)
    //h5 Samples
    //ul 
    //    li
    //        a(href="https://github.com/vmware/vsphere-automation-sdk-python/tree/master/samples/vsphere/vcenter/vm") Python Sample
